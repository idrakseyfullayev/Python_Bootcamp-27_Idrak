{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "dfc7be15",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Outlier qiymətləri:\n",
      "Empty DataFrame\n",
      "Columns: [value]\n",
      "Index: []\n",
      "Aşağı hədd: -85.0\n",
      "Yuxarı hədd: 175.0\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Məlumatları hazırlayırıq\n",
    "data = np.append(np.arange(-20, 110), 170)\n",
    "df = pd.DataFrame(data=data, columns=['value'])\n",
    "\n",
    "# Boxplot-u yaradırıq\n",
    "fig, ax = plt.subplots(figsize=(8, 6))\n",
    "\n",
    "# Boxplot-un xüsusiyyətlərini təyin edirik\n",
    "flierprops = dict(marker='o', color='red', markersize=8, linestyle='none')\n",
    "df.boxplot(column='value', ax=ax, flierprops=flierprops)\n",
    "\n",
    "# Q1, Q3 və IQR-i hesablamaq\n",
    "Q1 = df['value'].quantile(0.25)\n",
    "Q3 = df['value'].quantile(0.75)\n",
    "IQR = Q3 - Q1\n",
    "\n",
    "# Fence-ləri hesablamaq\n",
    "lower_fence = Q1 - 1.5 * IQR\n",
    "upper_fence = Q3 + 1.5 * IQR\n",
    "\n",
    "# Outlier qiymətlərini tapmaq\n",
    "outliers = df[(df['value'] < lower_fence) | (df['value'] > upper_fence)]\n",
    "\n",
    "# Lower və upper fence-ləri göstərmək\n",
    "ax.axhline(lower_fence, color='blue', linestyle='--', linewidth=1, label='Lower Fence')\n",
    "ax.axhline(upper_fence, color='green', linestyle='--', linewidth=1, label='Upper Fence')\n",
    "\n",
    "# Outlier-ləri göstərmək\n",
    "for i, outlier in outliers.iterrows():\n",
    "    ax.annotate(outlier['value'], xy=(1, outlier['value']), xytext=(1.05, outlier['value']),\n",
    "                arrowprops=dict(facecolor='black', shrink=0.05))\n",
    "\n",
    "# Əfsanə və başlıq əlavə etmək\n",
    "plt.legend()\n",
    "plt.title('Boxplot with Outliers and Fences')\n",
    "plt.ylabel('Values')\n",
    "\n",
    "# Qrafiki göstərmək\n",
    "plt.show()\n",
    "\n",
    "# Outlier qiymətlərini çap edirik\n",
    "print(\"Outlier qiymətləri:\")\n",
    "print(outliers)\n",
    "\n",
    "print(\"Aşağı hədd:\", lower_fence)\n",
    "print(\"Yuxarı hədd:\", upper_fence)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c5d1abde",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
